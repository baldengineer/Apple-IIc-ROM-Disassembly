; See the LICENSE file for distribution terms (CC BY-NC-SA 4.0).
;
; This file generated by James Lewis, @baldengineer, Feb 2023.
;
; Sources:
;   Apple IIc Technical Reference Manual (Firmware listing)

*SYNOPSIS Apple IIc slinky equates for $C400 space

; slinky equates
revnum		@ $101	;revision 1.0.1
pcrevnum	@ $11	;smartport rev 1.1

; prodos equates
cmmand	@ $42	;command to be executed
unit	@ $43	;D<6-4> = slot
buffer	@ $44	;pointer to 512 byte data buffer
block	@ $46 	;block dumber

; protocol converter equates
pparm	@ $43	;parameter count
punit	@ $44	;unit number
pbuff	@ $45	;two byte buffer pointer
pstat	@ $47	;status / control code
pblock	@ $47   ;block number
pcount	@ $47   ;byte count
paddr	@ $49   ;address for read
tempptr	@ $4A   ;pointer to params must be last 2 zp byte
zused	@ $0A	;tempptr-cmmand+2 ;zero page bytes used

; prodos commands
prostat @ 0 	;status command
proread @ 1 	;read command
prowrit @ 2 	;write command
proform @ 3 	;format command

; DOS equates
iobpl	@ $48	;pointer to IOB
iobph	@ $49	
ibslot	@ 1		;slot * 16
ibdrvn	@ 2		;drive 1 or 2
ibtrk	@ 4		;track number
ibsect	@ 5		;sector number
ibbufp	@ 8		;buffer pointer
ibcmd	@ $0C	;command
ibstat	@ $0D	;status
doserr	@ $80	;DOS I/O error
dosinit	@ $9D1E	;DOS init vector use addr-1
dossync	@ $A6C3	;$A6C4-1 ;DOS syntax error
rwts	@ $BD00	;RWTS entry point

; error codes
badcmd	@ $01	;bad command
badpcnt	@ $04	;bad parameter count
badunit	@ $11	;bad unit number
badctl	@ $21	;bad control / status code
ioerr	@ $27	;other I/O error
nderr	@ $28	;no device error
badblk	@ $2D	;bad block or address

; prodos boot equates
bootjmp		@ 2			;make jmp to entry
bootblk		@ 0			;reads block 0
bootbuf		@ $800		;into $800
autoscan	@ $FABA		;re-entry point to auto boot
monitor		@ $FF59		;go to monitor if boot fails

; scratch area equates
sizetemp	@ $478	;holds # blocks
error		@ $4F8	;error flag
xval		@ $578	;value to be returned in X
yval		@ $5F8	;value to be returned in Y
sl_lcstate	@ $678	;language card state
sl_devno	@ $778	;slot * 16 ($n0) + $88
sl_mslot	@ $7F8	;$C0 + slot ($Cn)

; slot ram equates
sl_scrn1	@ $478  ;-$C0 
sl_scrn2	@ $4F8  ;-$C0
sl_scrn3	@ $578  ;-$C0
sl_scrn4	@ $5F8  ;-$C0
sl_scrn5	@ $678  ;-$C0
sl_scrn6	@ $6F8  ;-$C0
sl_scrn7	@ $778  ;-$C0
sl_scrn8	@ $7F8  ;-$C0
numbanks	@ $478  ;-$C0  ;sl.scrn1 ;number of 64K banks on card
powerup		@ $778  ;-$C0 	;sl.scrn7 ;powerup byte 	
;power2 @ sl_scrn8

; hardware equates, must be in $BF00 to avoid double access
addrl	@ $BFF8		;address pointer
addrm	@ $BFF9		;auto incs after every data access
addrh	@ $BFFA		
data	@ $BFFB		;data pointed to

; other interface equates
proflag		@ $BF00		;0 = Pascal, $4C = ProDOS, other = DOS
nameflag	@ $AA		;value unused in any catalog
sizeflg		@ $FC		;block size flag
zers		@ $FD		;catalog skip flag
skpfe		@ $FE		;skip FE bytes in catalog
slot		@ $04		;slot #
diagcode	@ $DC00		;location of diagnostic code
diagdest	@ $2000		;location of diagnostics in ram
diagstart	@ $1FFF		;diagtest-1 ;start location of diagnostics
